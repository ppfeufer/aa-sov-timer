name: Automated Checks

on:
  push:
    branches:
      - '**'

    tags-ignore:
      - '**'

  pull_request:
    branches:
      - '**'

    tags-ignore:
      - '**'

jobs:
  # pre-commit checks
  pre-commit:
    name: Pre Commit Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Run Pre Commit Checks
        uses: pre-commit/action@v2.0.0

  # codacy security scan
  codacy-security-scan:
    needs: [pre-commit]
    name: Codacy Security Scan
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout code
        uses: actions/checkout@v2

      # Execute Codacy Analysis CLI and generate a SARIF output with the security issues identified during the analysis
      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@1.1.0
        with:
          # Check https://github.com/codacy/codacy-analysis-cli#project-token to get your project token from your Codacy repository
          # You can also omit the token and run the tools that support default configurations
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          verbose: true
          output: results.sarif
          format: sarif
          # Adjust severity of non-security issues
          gh-code-scanning-compat: true
          # Force 0 exit code to allow SARIF file generation
          # This will handover control about PR rejection to the GitHub side
          max-allowed-issues: 2147483647

      # Upload the SARIF file generated in the previous step
      - name: Upload SARIF results file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: results.sarif

  # run test coverage
  test-coverage:
    needs: [codacy-security-scan]
    name: Test Coverage

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [ 3.6, 3.7, 3.8, 3.9 ]

    steps:
      - uses: actions/checkout@v2
      - name: Install redis
        run: sudo apt-get install -y redis-tools redis-server

      - name: Verify that redis is up
        run: redis-cli ping

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install Tox and any other packages
        run: pip install tox

      - name: Run Tox
        # Run tox using the version of Python in `PATH`
        run: tox -e py

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
#          files: ./coverage1.xml,./coverage2.xml # optional
#          flags: unittests # optional
#          name: codecov-umbrella # optional
#          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)

      - name: Upload to Codacy Coverage Reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.xml

  # pypi build test
  pypi-build-test:
    needs: [test-coverage]
    name: PyPi Build Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Tools
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      - name: Package Build
        env:
          STACKMANAGER_VERSION: 9999
        run: |
          python setup.py sdist bdist_wheel
